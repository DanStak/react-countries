{"version":3,"sources":["layouts/AllCountries.js","layouts/FindCountry.js","layouts/Game.js","components/Country.js","pages/ListOfCountries.js","pages/ErrorPage.js","pages/SearchCountry.js","components/Results.js","pages/PlayGame.js","pages/MainPage.js","layouts/Pages.js","layouts/Main.js","layouts/App.js","serviceWorker.js","index.js"],"names":["AllCountries","react_default","a","createElement","Fragment","Link","to","FindCountry","Game","Country","props","name","capital","region","subregion","population","area","currency","flag","error","className","src","alt","concat","filterButtons","id","ListOfCountries","state","mainData","data","isLoaded","value","handleFilterChange","e","filter","target","console","log","_this","sort","b","setState","handleChange","handleSubmit","preventDefault","Object","toConsumableArray","length","slice","_this2","this","fetch","then","response","ok","Error","status","json","catch","err","_this3","list","map","item","components_Country","key","numericCode","currencies","code","click","handleClick","buttons","onClick","onSubmit","type","placeholder","onChange","Component","ErrorPage","SearchCountry","country","isFound","API","alert","found","Results","well","wrong","style","color","button","class","PlayGame","draw","disabled","isTrue","checked","value0","value1","value2","value3","value4","showStats","handleSelect","randomCountry","amount","tab","i","number","Math","floor","random","push","validation","formValidationCounter","capitals","answerWell","answerWrong","toLowerCase","defineProperty","prevProps","prevState","_this$state","styleWrong","backgroundColor","borderBottom","styleWell","questions","index","htmlFor","toUpperCase","components_Results","Prompt","when","message","MainPage","Pages","Switch","Route","exact","path","component","Main","App","BrowserRouter","basename","process","layouts_Main","layouts_AllCountries","layouts_FindCountry","layouts_Game","layouts_Pages","Boolean","window","location","hostname","match","ReactDOM","render","layouts_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c107d19d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AllCountries = () => {\r\n  return (\r\n    <>\r\n      <Link to='/all'><span>Show all</span></Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllCountries;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FindCountry = () => {\r\n  return (\r\n    <>\r\n      <Link to='/search'><span>search</span></Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FindCountry;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Game = () => {\r\n  return (\r\n    <>\r\n      <Link to='/game'><span>play</span></Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport '../styles/Country.css'\r\n\r\nconst Country = props => {\r\n\r\n  let { name, capital, region, subregion, population, area, currency, flag } = props\r\n  const error = 'Lack of information';\r\n  if (name === '') {\r\n    name = error\r\n  };\r\n  if (capital === '') {\r\n    capital = error\r\n  };\r\n  if (region === '') {\r\n    region = error\r\n  };\r\n  if (subregion === '') {\r\n    subregion = error\r\n  };\r\n  if (population === '') {\r\n    population = error\r\n  };\r\n  if (area === null) {\r\n    area = error\r\n  };\r\n  if (currency === '') {\r\n    currency = error\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <section className='countryInfo'>\r\n      <div className='country'>\r\n        <header className='flagAndName'>\r\n          <img src={flag} alt={`flag of ${name}`} />\r\n          <h1>{name}</h1>\r\n        </header>\r\n        <main>\r\n          <div className='divCountry'><span className='property'>Area:</span><span className='value'>{area} {area === null && <sup>2</sup>}</span></div>\r\n          <div className='divCountry'><span className='property'>Capital:</span><span className='value'>{capital}</span></div>\r\n          <div className='divCountry'><span className='property'>Population:</span><span className='value'>{population}</span></div>\r\n          <div className='divCountry'><span className='property'>Currency:</span><span className='value'>{currency}</span></div>\r\n          <div className='divCountry'><span className='property'>Region:</span><span className='value'>{region}</span></div>\r\n          <div className='divCountry'><span className='property'>Subregion:</span><span className='value'>{subregion}</span></div>\r\n        </main>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Country;","import React, { Component } from 'react';\r\nimport Country from '../components/Country.js';\r\nimport '../styles/ListOfCountries.css';\r\n\r\nconst API = 'https://restcountries.eu/rest/v2/all';\r\n\r\n\r\nconst filterButtons = [\r\n  {\r\n    id: 1,\r\n    name: 'name A-Z',\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    name: 'name Z-A',\r\n  },\r\n\r\n  {\r\n    id: 3,\r\n    name: 'capital A-Z',\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    name: 'capital Z-A',\r\n  },\r\n\r\n  {\r\n    id: 5,\r\n    name: 'population -+',\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    name: 'population +-',\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    name: 'area -+',\r\n  },\r\n\r\n  {\r\n    id: 8,\r\n    name: 'area +-',\r\n  },\r\n]\r\n\r\nclass ListOfCountries extends Component {\r\n  state = {\r\n    mainData: [],\r\n    data: [],\r\n    isLoaded: false,\r\n    value: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(API)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response\r\n        }\r\n        throw Error(response.status)\r\n      })\r\n\r\n      .then(data => data.json())\r\n      .then(data => {\r\n        this.setState({\r\n          mainData: data,\r\n          data,\r\n          isLoaded: true\r\n        })\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log('coś poszło nie tak');\r\n      })\r\n\r\n  }\r\n\r\n  handleFilterChange = (e) => {\r\n\r\n    const filter = e.target.name;\r\n    console.log(filter)\r\n    const data = this.state.mainData\r\n\r\n    if (filter === 'name A-Z') {\r\n      data.sort((a, b) => {\r\n        if (a.name < b.name) {\r\n          return -1\r\n        }\r\n\r\n        if (a.name > b.name) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    if (filter === 'name Z-A') {\r\n      data.sort((a, b) => {\r\n        if (a.name < b.name) {\r\n          return 1\r\n        }\r\n\r\n        if (a.name > b.name) {\r\n          return -1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    if (filter === 'capital A-Z') {\r\n      data.sort((a, b) => {\r\n        if (a.capital < b.capital) {\r\n          return -1\r\n        }\r\n\r\n        if (a.capital > b.capital) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    if (filter === 'capital Z-A') {\r\n      data.sort((a, b) => {\r\n        if (a.capital < b.capital) {\r\n          return 1\r\n        }\r\n\r\n        if (a.capital > b.capital) {\r\n          return -1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    if (filter === 'population -+') {\r\n      data.sort((a, b) => {\r\n        if (a.population < b.population) {\r\n          return -1\r\n        }\r\n\r\n        if (a.population > b.population) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    if (filter === 'population +-') {\r\n      data.sort((a, b) => {\r\n        if (a.population < b.population) {\r\n          return 1\r\n        }\r\n\r\n        if (a.population > b.population) {\r\n          return -1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    if (filter === 'area -+') {\r\n      data.sort((a, b) => {\r\n        if (a.area < b.area) {\r\n          return -1\r\n        }\r\n\r\n        if (a.area > b.area) {\r\n          return 1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    if (filter === 'area +-') {\r\n      data.sort((a, b) => {\r\n        if (a.area < b.area) {\r\n          return 1\r\n        }\r\n\r\n        if (a.area > b.area) {\r\n          return -1\r\n        }\r\n        return 0\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      data,\r\n      value: ''\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const data = [...this.state.mainData];\r\n    const value = this.state.value;\r\n\r\n    if (value > 0 && value <= data.length) {\r\n      this.setState({\r\n        data: data.slice(0, (value * 1)),\r\n      })\r\n    } else console.log('unexpected number')\r\n\r\n  }\r\n\r\n  render() {\r\n    const list = this.state.data.map(item => (\r\n      <Country\r\n        key={item.numericCode}\r\n        name={item.name}\r\n        capital={item.capital}\r\n        region={item.region}\r\n        subregion={item.subregion}\r\n        population={item.population}\r\n        area={item.area}\r\n        currency={item.currencies[0].code}\r\n        flag={item.flag}\r\n        click={this.handleClick}\r\n      />\r\n    ))\r\n\r\n    const buttons = filterButtons.map(item => (\r\n      <button\r\n        key={item.id}\r\n        name={item.name}\r\n        className='filterButtons'\r\n        onClick={this.handleFilterChange}\r\n      >\r\n        {item.name}\r\n      </button>\r\n    ))\r\n\r\n    return (\r\n      <>\r\n        <section\r\n          className='listOfCountries'>\r\n          {buttons}\r\n\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              className='amount'\r\n              type='number'\r\n              value={this.state.value}\r\n              placeholder='amount of country'\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </form>\r\n\r\n        </section>\r\n        <main>\r\n          {this.state.isLoaded ? list : <h1 className='loading'>Loading...</h1>}\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListOfCountries;","import React from 'react';\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <h1>that page is not exist</h1>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\nimport Country from '../components/Country';\r\nimport '../styles/SearchCountry.css';\r\n\r\nclass SearchCountry extends Component {\r\n  state = {\r\n    country: [],\r\n    isFound: false,\r\n    value: ''\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const API = `https://restcountries.eu/rest/v2/name/${this.state.value}?fullText=true`;\r\n\r\n\r\n    fetch(API)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response\r\n        }\r\n        throw Error(response.status)\r\n      })\r\n\r\n      .then(data => data.json())\r\n      .then(country => {\r\n        this.setState({\r\n          country,\r\n          isFound: true,\r\n          value: ''\r\n        })\r\n      })\r\n\r\n      .catch(err => {\r\n        alert('Sorry, but there is no country with than name on Earth :(')\r\n        this.setState({\r\n          value: ''\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const found = this.state.country.map(item => (\r\n      <Country\r\n        key={item.numericCode}\r\n        name={item.name}\r\n        capital={item.capital}\r\n        region={item.region}\r\n        subregion={item.subregion}\r\n        population={item.population}\r\n        area={item.area}\r\n        currency={item.currencies[0].code}\r\n        flag={item.flag}\r\n      />\r\n    ))\r\n\r\n\r\n    return (\r\n      <>\r\n        <section className='search'>\r\n          <h1 className='searchH1'>search for country</h1>\r\n          <form className='searchForm' onSubmit={this.handleSubmit}>\r\n\r\n            <input\r\n              className='searchInput'\r\n              placeholder='name of country'\r\n              type='text'\r\n              id='country'\r\n              value={this.state.value}\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n            <button className='searchButton'>search</button>\r\n\r\n            {/* <select value={this.state.number} onChange={this.handleVisitsNumberChange.bind(this)}>\r\n            <option value=\"0\">0</option>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"more\">więcej</option>\r\n          </select> */}\r\n\r\n          </form>\r\n        </section>\r\n\r\n        <main>\r\n\r\n          {this.state.isFound && found}\r\n        </main>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchCountry;","import React from 'react';\r\nimport '../styles/Result.css';\r\n\r\nconst Results = props => {\r\n\r\n  const { well, wrong } = props\r\n  return (\r\n    <section className='result'>\r\n      <h1>Gratulation! You have reached</h1>\r\n      <div>\r\n        <span className='label'>Well answers: </span>\r\n        <span style={{ color: 'green' }}>\r\n          {well}\r\n        </span>\r\n        <br />\r\n        <span className='label'>Wrong answers: </span>\r\n        <span style={{ color: 'red' }}>\r\n          {wrong}\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Results;","import React, { Component } from 'react';\r\nimport Results from '../components/Results.js';\r\nimport { Prompt } from 'react-router-dom';\r\nimport '../styles/PlayGame.css';\r\n\r\nconst button = [\r\n  {\r\n    class: 'africa',\r\n    id: 1\r\n  },\r\n\r\n  {\r\n    class: 'asia',\r\n    id: 2\r\n  },\r\n\r\n  {\r\n    class: 'americas',\r\n    id: 3\r\n  },\r\n\r\n  {\r\n    class: 'europe',\r\n    id: 4\r\n  },\r\n\r\n  {\r\n    class: 'oceania',\r\n    id: 5\r\n  },\r\n]\r\n\r\nclass PlayGame extends Component {\r\n  state = {\r\n    data: [],\r\n    API: '',\r\n    isLoaded: false,\r\n    draw: [],\r\n    disabled: false,\r\n    isTrue: false,\r\n    checked: false,\r\n    value0: '',\r\n    value1: '',\r\n    value2: '',\r\n    value3: '',\r\n    value4: '',\r\n    well: null,\r\n    wrong: null,\r\n    showStats: false\r\n  }\r\n\r\n  handleSelect = (e) => {\r\n\r\n    this.setState({\r\n      data: [],\r\n      API: '',\r\n      isLoaded: false,\r\n      draw: [],\r\n      disabled: true,\r\n      isTrue: false,\r\n      value0: '',\r\n      value1: '',\r\n      value2: '',\r\n      value3: '',\r\n      value4: '',\r\n    })\r\n\r\n\r\n    const region = e.target.className;\r\n    const API = `https://restcountries.eu/rest/v2/region/${region}`\r\n    fetch(API)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response\r\n        }\r\n        throw Error(response.status)\r\n      })\r\n      .then(data => data.json())\r\n      .then(data => {\r\n        this.setState({\r\n          data,\r\n          isLoaded: true\r\n        })\r\n      })\r\n\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    if (prevState.draw === this.state.draw && !this.state.isTrue && this.state.isLoaded) {\r\n\r\n      let draw = 0;\r\n      draw = this.randomCountry();\r\n\r\n      let capitals = [];\r\n      for (let i = 0; i < draw.length; i++) capitals.push(draw[i].capital)\r\n\r\n      console.log(capitals);\r\n\r\n      this.setState({\r\n        draw,\r\n        isTrue: true,\r\n        showStats: false\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  randomCountry = () => {\r\n    const amount = this.state.data.length;\r\n\r\n    const tab = [];\r\n\r\n    for (let i = 0; i <= 4; i++) {\r\n      const number = Math.floor(Math.random() * amount)\r\n      tab.push(this.state.data[number])\r\n    }\r\n    return tab\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validation = this.formValidationCounter();\r\n    const { well, wrong } = validation;\r\n\r\n    this.setState({\r\n      well,\r\n      wrong,\r\n      showStats: true,\r\n      disabled: false,\r\n    })\r\n\r\n  }\r\n\r\n  formValidationCounter = () => {\r\n    const draw = this.state.draw;\r\n    const capitals = [];\r\n    const answerWell = [];\r\n    const answerWrong = [];\r\n\r\n    for (let i = 0; i < draw.length; i++) {\r\n      capitals.push(draw[i].capital)\r\n    }\r\n\r\n    if (capitals[0].toLowerCase() === this.state.value0.toLowerCase()) {\r\n      answerWell.push('1')\r\n    } else if (capitals[0] !== this.state.value0) {\r\n      answerWrong.push('0')\r\n    }\r\n\r\n    if (capitals[1].toLowerCase() === this.state.value1.toLowerCase()) {\r\n      answerWell.push('1')\r\n    } else if (capitals[1] !== this.state.value1) {\r\n      answerWrong.push('0')\r\n    }\r\n\r\n    if (capitals[2].toLowerCase() === this.state.value2.toLowerCase()) {\r\n      answerWell.push('1')\r\n    } else if (capitals[2] !== this.state.value2) {\r\n      answerWrong.push('0')\r\n    }\r\n\r\n    if (capitals[3].toLowerCase() === this.state.value3.toLowerCase()) {\r\n      answerWell.push('1')\r\n    } else if (capitals[3] !== this.state.value3) {\r\n      answerWrong.push('0')\r\n    }\r\n\r\n    if (capitals[4].toLowerCase() === this.state.value4.toLowerCase()) {\r\n      answerWell.push('1')\r\n    } else if (capitals[4] !== this.state.value4) {\r\n      answerWrong.push('0')\r\n    }\r\n\r\n    const well = answerWell.length;\r\n    const wrong = answerWrong.length;\r\n\r\n    return ({\r\n      well,\r\n      wrong\r\n    })\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    const { isLoaded, disabled, value0, value1, value2, value3, value4, well, wrong, showStats } = this.state;\r\n\r\n    const styleWrong = {\r\n      backgroundColor: 'rgba(251, 5, 5, .3)',\r\n      borderBottom: 'none'\r\n    }\r\n\r\n    const styleWell = {\r\n      backgroundColor: 'rgba(30, 148, 0, .3)',\r\n      borderBottom: 'none'\r\n    }\r\n\r\n\r\n    let questions = null;\r\n    let state = null;\r\n    if (isLoaded) {\r\n      const draw = [...this.state.draw]\r\n      questions = draw.map((item, index) => {\r\n\r\n        if (index === 0) {\r\n          state = value0;\r\n        }\r\n        if (index === 1) {\r\n          state = value1\r\n        }\r\n        if (index === 2) {\r\n          state = value2;\r\n        }\r\n        if (index === 3) {\r\n          state = value3\r\n        }\r\n        if (index === 4) {\r\n          state = value4\r\n        }\r\n\r\n        return (\r\n          <div key={item.name}>\r\n            <label htmlFor={item.capital} >\r\n              {item.name}\r\n            </label>\r\n            <input\r\n              type='text'\r\n              id={item.capital}\r\n              name={`value${index}`}\r\n              value={state}\r\n              onChange={this.handleChange}\r\n              style={showStats ? state.toLowerCase() === item.capital.toLowerCase() ? styleWell : styleWrong : null}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n      )\r\n    }\r\n\r\n\r\n    const buttons = button.map(item => (\r\n      <button className={item.class} key={item.id} disabled={this.state.disabled} onClick={this.handleSelect}>{item.class.toUpperCase()}</button>\r\n    ))\r\n\r\n    return (\r\n      <>\r\n\r\n        <section className='search'>\r\n          <h1 className='searchH1'>Chose region</h1>\r\n          {buttons}\r\n        </section>\r\n        <main className='mainGame'>\r\n\r\n          {this.state.showStats &&\r\n            <Results\r\n              well={well}\r\n              wrong={wrong} />}\r\n\r\n          {isLoaded ?\r\n            <div>\r\n              <h3 className='gameH3' >What's the capital city of?</h3>\r\n              <form onSubmit={this.handleSubmit}>\r\n                {questions}\r\n                {!showStats && <button>check</button>}\r\n              </form>\r\n              {!showStats && <p>TIP: look at the console (F12)</p>}\r\n            </div> : null}\r\n\r\n\r\n        </main>\r\n        <Prompt\r\n          when={disabled}\r\n          message='You are already in the game, would you like to continue?'\r\n        />\r\n      </>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default PlayGame;","import React from 'react';\r\nimport '../styles/MainPage.css';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <h1 className='mainH1'>Welcom in my interactive country page in React!</h1>\r\n  );\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ListOfCountries from '../pages/ListOfCountries.js';\r\nimport ErrorPage from '../pages/ErrorPage.js';\r\nimport SearchCountry from '../pages/SearchCountry.js';\r\nimport PlayGame from '../pages/PlayGame.js';\r\nimport MainPage from '../pages/MainPage.js';\r\n\r\nconst Pages = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path='/' component={MainPage} />\r\n\r\n        <Route path='/all' component={ListOfCountries} />\r\n\r\n        <Route path='/search' component={SearchCountry} />\r\n\r\n        <Route path='/game' component={PlayGame} />\r\n\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pages;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <Link to='/'><span>home</span></Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport AllCountries from './AllCountries.js';\nimport FindCountry from './FindCountry.js';\nimport Game from './Game.js';\nimport Pages from './Pages.js';\nimport Main from './Main.js';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nclass App extends Component {\n\n  handleClick = () => {\n    console.log('działa');\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <nav>\n            <ul>\n              <li className='main'><Main /></li>\n\n              <li className='all'><AllCountries /></li>\n\n              <li className='find'><FindCountry /></li>\n\n              <li className='game'><Game /></li>\n\n              {/* <li className='liked'><Liked /></li> */}\n            </ul>\n          </nav>\n          <article>\n            <Pages />\n          </article>\n\n          <footer>© Damian Stasiak 2019</footer>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}